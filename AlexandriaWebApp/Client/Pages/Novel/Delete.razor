@page "/novel/delete/{NovelId:int}"
@using AlexandriaWebApp.Shared.Models.Novel
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject HttpClient http
@inject NavigationManager navigation

<h3>@Novel.Title</h3>

@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}

@if (Novel != null)
{
<div class="container">
    <div class="card">
        <div class="card-header d-flex justify-content-between">
            <span>@Novel.Title</span>
            <span class="text-muted"><strong>@Novel.Author</strong></span>
        </div>
        <div class="card-body">
            <span class="text-muted text-left">
                <a href="/Novel/NovelsInCategory/{@Novel.CategoryId}">
                    <strong>@Novel.CategoryName</strong>
                </a>
            </span>
            <span class="text-right">Average Rating: @Novel.AverageRating</span>
            <span>@Novel.Description</span>
        </div>
    </div>
    <div class="card-footer d-flex justify-content-between">
        <a href=@($"/novel/edit/{NovelId}") class="btn btn-outline-primary">Edit Novel</a>
        <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Novel!</a>
        <a href="/novel">Back to the Catalog</a>
    </div>
</div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int NovelId { get; set; }
    public NovelDetail Novel { get; set; }
    public string Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Novel = await http.GetFromJsonAsync<NovelDetail>($"/api/novel/{NovelId}");

    }

    private async void HandleClick()
    {
        var deleteRes = await http.DeleteAsync($"/api/novel/delete/{NovelId}");

        if (deleteRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/novel");
        }

        else
        {
            Message = "Failed to delete your novel.";
        }
    }
}
